<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.4</version>
    <date>2021-11-12T16:44:04Z</date>
    <groups>
        <group>
            <uuid>0d2d8be0e68241f8928409e673e9f3b0</uuid>
            <name>SRLinux_new</name>
        </group>
    </groups>
    <templates>
        <template>
            <uuid>19cd2fbcd7fd44dfa8a147ad287e3e26</uuid>
            <template>SRLinux_Template_new</template>
            <name>SRLinux_Template_new</name>
            <groups>
                <group>
                    <name>SRLinux_new</name>
                </group>
            </groups>
            <discovery_rules>
                <discovery_rule>
                    <uuid>5e081170e3654cb483c57dc0bcebdf6e</uuid>
                    <name>srlinux.bgp_neighbor</name>
                    <type>HTTP_AGENT</type>
                    <key>srlinux.bgp_neighbor.[{#NETINST},{#PEERID}]</key>
                    <delay>10s</delay>
                    <authtype>BASIC</authtype>
                    <username>{$USER}</username>
                    <password>{$PWD}</password>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#PEERADMINSTATE}</macro>
                                <value>^enable$</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>d9247209046c456581db94202230939c</uuid>
                            <name>srlinux-bgp-peer-session-state-[vrf-{#NETINST},{#PEERID}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-bgp-peer-session-state-[vrf-{#NETINST},{#PEERID}]</key>
                            <delay>10s</delay>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{&quot;jsonrpc&quot;: &quot;2.0&quot;,&quot;id&quot;: 0,&quot;method&quot;: &quot;get&quot;,&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/network-instance[name={#NETINST}]/protocols/bgp/neighbor[peer-address={#PEERID}]/session-state&quot;,&quot;datastore&quot;: &quot;state&quot;}]}}</posts>
                            <request_method>POST</request_method>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>7329f3973c884783895668413477a55e</uuid>
                                    <expression>last(/SRLinux_Template/srlinux-bgp-peer-session-state-[vrf-{#NETINST},{#PEERID}],#2)=&quot;established&quot; and last(/SRLinux_Template/srlinux-bgp-peer-session-state-[vrf-{#NETINST},{#PEERID}],#1) &lt;&gt;&quot;established&quot;</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/SRLinux_Template/srlinux-bgp-peer-session-state-[vrf-{#NETINST},{#PEERID}],#2)&lt;&gt;&quot;established&quot; and last(/SRLinux_Template/srlinux-bgp-peer-session-state-[vrf-{#NETINST},{#PEERID}],#1) =&quot;established&quot;</recovery_expression>
                                    <name>Trigger-srlinux-bgp-peer-session-state-[vrf-{#NETINST},{#PEERID}]</name>
                                    <priority>HIGH</priority>
                                    <description>srlinux-bgp-peer-session-state-[vrf-{#NETINST},{#PEERID}]-down-error-code-[{#LASTERRORCODE}]</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                    <posts>{&quot;jsonrpc&quot;: &quot;2.0&quot;,&quot;id&quot;: 0,&quot;method&quot;: &quot;get&quot;,&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/network-instance[name=*]/protocols/bgp/neighbor[peer-address=*]&quot;,&quot;datastore&quot;: &quot;state&quot;}]}}</posts>
                    <request_method>POST</request_method>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#LASTERRORCODE}</lld_macro>
                            <path>$.lasterrorcode</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#NETINST}</lld_macro>
                            <path>$.netins</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PEERADMINSTATE}</lld_macro>
                            <path>$.peeradminstate</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PEERID}</lld_macro>
                            <path>$.peerid</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.result[0].[&quot;srl_nokia-network-instance:network-instance&quot;]</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>var bgp_peers= []; // create an empty array


var json = JSON.parse(value);
for (i = 0; i &lt; json.length; i++) {
  var netinstance_name = json[i].name;
  var net
  var bgp_neighbors = json[i].protocols[&quot;srl_nokia-bgp:bgp&quot;].neighbor;
  for (j=0; j &lt; bgp_neighbors.length; j++) {
    var bgp_peer_addr = bgp_neighbors[j][&quot;peer-address&quot;];
    var peer_admin_state = bgp_neighbors[j][&quot;admin-state&quot;];
    var last_notification_error_code = bgp_neighbors[j][&quot;last-notification-error-code&quot;];
    bgp_peers.push({
        netins: netinstance_name,
        peeradminstate: peer_admin_state,
        peerid: bgp_peer_addr,
        lasterrorcode: last_notification_error_code
    });
  }

  

}

return JSON.stringify(bgp_peers);


</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>0e0e16cd13a24013b733429cbecebcf0</uuid>
                    <name>srlinux.controlcard</name>
                    <type>HTTP_AGENT</type>
                    <key>srlinux.controlcard.[{#SLOTID}]</key>
                    <delay>10s</delay>
                    <authtype>BASIC</authtype>
                    <username>{$USER}</username>
                    <password>{$PWD}</password>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>e23dc06109104472b4ea5e35be97ad20</uuid>
                            <name>srlinux-controlcard-cpu-total-average-1-[{#SLOTID}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-controlcard-cpu-total-average-1-[{#SLOTID}]</key>
                            <value_type>FLOAT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/platform/control[slot={#SLOTID}]/cpu[index=all]/total/average-1&quot;,&quot;datastore&quot;: &quot;state&quot;}]}

}</posts>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <uuid>e9a428f06a9443ec82bb6e90895f4327</uuid>
                            <name>srlinux-controlcard-cpu-total-average-5-[{#SLOTID}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-controlcard-cpu-total-average-5-[{#SLOTID}]</key>
                            <value_type>FLOAT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/platform/control[slot={#SLOTID}]/cpu[index=all]/total/average-5&quot;,&quot;datastore&quot;: &quot;state&quot;}]}

}</posts>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <uuid>8dfbb2327737455b9cbb63ad9f91de62</uuid>
                            <name>srlinux-controlcard-cpu-total-average-15-[{#SLOTID}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-controlcard-cpu-total-average-15-[{#SLOTID}]</key>
                            <value_type>FLOAT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/platform/control[slot={#SLOTID}]/cpu[index=all]/total/average-15&quot;,&quot;datastore&quot;: &quot;state&quot;}]}

}</posts>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <uuid>5fc82d77234940a492ca1579adcfc00b</uuid>
                            <name>srlinux-controlcard-cpu-total-instant-[{#SLOTID}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-controlcard-cpu-total-instant-[{#SLOTID}]</key>
                            <value_type>FLOAT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/platform/control[slot={#SLOTID}]/cpu[index=all]/total/instant&quot;,&quot;datastore&quot;: &quot;state&quot;}]}

}</posts>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <uuid>49f10823bdc343228f0a8ba54bd88644</uuid>
                            <name>srlinux-controlcard-memory-utilization-[{#SLOTID}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-controlcard-memory-utilization-[{#SLOTID}]</key>
                            <value_type>FLOAT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/platform/control[slot={#SLOTID}]/memory/utilization&quot;,&quot;datastore&quot;: &quot;state&quot;}]}

}</posts>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <uuid>32ff95959263429ab96326db22725d03</uuid>
                            <name>srlinux-controlcard-temperature-[{#SLOTID}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-controlcard-temperature-[{#SLOTID}]</key>
                            <value_type>FLOAT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/platform/control[slot={#SLOTID}]/temperature/instant&quot;,&quot;datastore&quot;: &quot;state&quot;}]}

}</posts>
                            <post_type>JSON</post_type>
                            <request_method>POST</request_method>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>2f0e1b619f174716a56296ccf5302518</uuid>
                            <name>srlinux-controlcard-cpu-[{#SLOTID}]</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SRLinux_Template</host>
                                        <key>srlinux-controlcard-cpu-total-instant-[{#SLOTID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>SRLinux_Template</host>
                                        <key>srlinux-controlcard-cpu-total-average-1-[{#SLOTID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>00BFFF</color>
                                    <item>
                                        <host>SRLinux_Template</host>
                                        <key>srlinux-controlcard-cpu-total-average-5-[{#SLOTID}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>SRLinux_Template</host>
                                        <key>srlinux-controlcard-cpu-total-average-15-[{#SLOTID}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>3496fb1ff6d545548389f4027c7ed633</uuid>
                            <name>srlinux-controlcard-memory-utilization-[{#SLOTID}]</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SRLinux_Template</host>
                                        <key>srlinux-controlcard-memory-utilization-[{#SLOTID}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>7ada0f8c8cb14aaea02734189ca7aabd</uuid>
                            <name>srlinux-controlcard-temperature-[{#SLOTID}]</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SRLinux_Template</host>
                                        <key>srlinux-controlcard-temperature-[{#SLOTID}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                    <posts>{&quot;jsonrpc&quot;: &quot;2.0&quot;,&quot;id&quot;: 0,&quot;method&quot;: &quot;get&quot;,&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/platform/control[slot=*]&quot;,&quot;datastore&quot;: &quot;state&quot;}]}}</posts>
                    <post_type>JSON</post_type>
                    <request_method>POST</request_method>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#SLOTID}</lld_macro>
                            <path>$.slot</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.result[0].['srl_nokia-platform-control:control']</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>79be793502d541d9a077ca421911190a</uuid>
                    <name>srlinux.interfaces</name>
                    <type>HTTP_AGENT</type>
                    <key>srlinux.interface.[{#NAME}]</key>
                    <delay>10s</delay>
                    <authtype>BASIC</authtype>
                    <username>{$USER}</username>
                    <password>{$PWD}</password>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#ADMINSTATE}</macro>
                                <value>^enable$</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>^ethernet*</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>^mgmt*</value>
                                <formulaid>C</formulaid>
                            </condition>
                            <condition>
                                <macro>{#NAME}</macro>
                                <value>^irb*</value>
                                <formulaid>D</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>00578ffafe91491bbc2bf74bffc48900</uuid>
                            <name>srlinux-interface-in-rate-bps-[{#NAME}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-interface-in-rate-bps-[{#NAME}]</key>
                            <delay>15s</delay>
                            <history>2d</history>
                            <trends>30d</trends>
                            <value_type>FLOAT</value_type>
                            <units>bps</units>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/interface[name={#NAME}]/traffic-rate/in-bps&quot;,&quot;datastore&quot;: &quot;state&quot;}]}
}</posts>
                            <post_type>JSON</post_type>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <uuid>a8a6f2939e314f36864f309b5f535472</uuid>
                            <name>srlinux-interface-out-rate-bps-[{#NAME}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-interface-out-rate-bps-[{#NAME}]</key>
                            <delay>15s</delay>
                            <history>2d</history>
                            <trends>30d</trends>
                            <value_type>FLOAT</value_type>
                            <units>bps</units>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/interface[name={#NAME}]/traffic-rate/out-bps&quot;,&quot;datastore&quot;: &quot;state&quot;}]}
}</posts>
                            <post_type>JSON</post_type>
                            <request_method>POST</request_method>
                        </item_prototype>
                        <item_prototype>
                            <uuid>4cba1bb7bdab41dd961bf38a6f1792e7</uuid>
                            <name>srlinux-interface-state-[{#NAME}]</name>
                            <type>HTTP_AGENT</type>
                            <key>srlinux-interface-state-[{#NAME}]</key>
                            <delay>15s</delay>
                            <history>30d</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <authtype>BASIC</authtype>
                            <username>{$USER}</username>
                            <password>{$PWD}</password>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.result[0]</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                            <posts>{
&quot;jsonrpc&quot;: &quot;2.0&quot;,
&quot;id&quot;: 0,
&quot;method&quot;: &quot;get&quot;,
&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/interface[name={#NAME}]/oper-state&quot;,&quot;datastore&quot;: &quot;state&quot;}]}

}</posts>
                            <post_type>JSON</post_type>
                            <request_method>POST</request_method>
                            <tags>
                                <tag>
                                    <tag>interface-oper-state</tag>
                                    <value>true</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>d9dbb6575d17403a8aae37a15ade44ee</uuid>
                                    <expression>last(/SRLinux_Template/srlinux-interface-state-[{#NAME}],#2)=&quot;up&quot; and last(/SRLinux_Template/srlinux-interface-state-[{#NAME}],#1)=&quot;down&quot;</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/SRLinux_Template/srlinux-interface-state-[{#NAME}],#2)=&quot;down&quot; and last(/SRLinux_Template/srlinux-interface-state-[{#NAME}],#1)=&quot;up&quot;</recovery_expression>
                                    <name>Trigger-srlinux-Interface-[&quot;{#NAME}&quot;]</name>
                                    <priority>HIGH</priority>
                                    <description>srlinux-interface-state-[{#NAME}]-oper-down-reason-[{#OPERDOWNREASON}]</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>64902177fa3b44d180fc986aa08ae625</uuid>
                            <name>srlinux-interface-in-out-rate-bps-[{#NAME}]</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>SRLinux_Template</host>
                                        <key>srlinux-interface-in-rate-bps-[{#NAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>SRLinux_Template</host>
                                        <key>srlinux-interface-out-rate-bps-[{#NAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <url>http://{HOST.CONN}:{$JSONPORT}/jsonrpc</url>
                    <posts>{&quot;jsonrpc&quot;: &quot;2.0&quot;,&quot;id&quot;: 0,&quot;method&quot;: &quot;get&quot;,&quot;params&quot;: {&quot;commands&quot;: [{&quot;path&quot;: &quot;/interface[name=*]&quot;,&quot;datastore&quot;: &quot;state&quot;}]}}</posts>
                    <post_type>JSON</post_type>
                    <request_method>POST</request_method>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#ADMINSTATE}</lld_macro>
                            <path>$.[&quot;admin-state&quot;]</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#NAME}</lld_macro>
                            <path>$.name</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#OPERDOWNREASON}</lld_macro>
                            <path>$.[&quot;oper-down-reason&quot;]</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.result[0].['srl_nokia-interfaces:interface']</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$IPADDR}</macro>
                    <description>Enter the IP Address</description>
                </macro>
                <macro>
                    <macro>{$JSONPORT}</macro>
                    <value>80</value>
                </macro>
                <macro>
                    <macro>{$PWD}</macro>
                    <type>SECRET_TEXT</type>
                    <description>Enter SR Linux Json-RPC Password</description>
                </macro>
                <macro>
                    <macro>{$USER}</macro>
                    <value>admin</value>
                    <description>Enter SR Linux Json-RPC Username</description>
                </macro>
            </macros>
        </template>
    </templates>
</zabbix_export>
